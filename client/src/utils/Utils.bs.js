// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var E$Client = require("../types/E.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function resolveOption(opt) {
  if (opt !== undefined) {
    return opt;
  } else {
    return "";
  }
}

function resolveRegex(exp, str) {
  var res = exp.exec(str);
  if (res !== null && res.length === 2) {
    var token = res[1];
    return resolveOption((token == null) ? undefined : Caml_option.some(token));
  } else {
    return "";
  }
}

function ste(prim) {
  return prim;
}

function filterOptionalResult(errorMessage, result) {
  if (result !== undefined) {
    return /* Ok */Block.__(0, [Caml_option.valFromOption(result)]);
  } else {
    return /* Error */Block.__(1, [errorMessage]);
  }
}

function idd(e) {
  return e;
}

function filterAndFold(fn) {
  return Curry._2(E$Client.A[/* fold_left */7], (function (acc, elem) {
                return Curry._3(fn, elem, (function (e) {
                              return $$Array.concat(/* :: */[
                                          acc,
                                          /* :: */[
                                            /* array */[e],
                                            /* [] */0
                                          ]
                                        ]);
                            }), (function (param) {
                              return acc;
                            }));
              }), /* array */[]);
}

function doIfSome(fn, s) {
  if (s !== undefined) {
    return Curry._1(fn, Caml_option.valFromOption(s));
  } else {
    return /* () */0;
  }
}

function showIf(cond, comp) {
  if (cond) {
    return comp;
  } else {
    return null;
  }
}

exports.resolveOption = resolveOption;
exports.resolveRegex = resolveRegex;
exports.ste = ste;
exports.filterOptionalResult = filterOptionalResult;
exports.idd = idd;
exports.filterAndFold = filterAndFold;
exports.doIfSome = doIfSome;
exports.showIf = showIf;
/* E-Client Not a pure module */
